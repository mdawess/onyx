# serverless.yml

service: apollo-lambda
plugins:
  - serverless-plugin-typescript
  - serverless-offline
  - serverless-dotenv-plugin
useDotenv: true
provider:
  name: aws
  runtime: nodejs16.x
  region: ca-central-1
  environment:
    DB_USER: ${self:custom.DB_USER}
    DB_ID: ${env:DB_ID}
    DB_PASSWORD: ${self:custom.DB_PASSWORD}
    DB_NAME: ${self:custom.DB_NAME}
    PROD_HOST: ${self:custom.PROD_HOST}
    DB_PORT: ${env:DB_PORT}
    NODE_ENV: ${env:NODE_ENV}
custom:
  path: src/database/.env
  serverless-offline:
    httpPort: 4000
  DB_NAME: ${DB_NAME}
  DB_USER: ${DB_USER}
  DB_PASSWORD: ${DB_PASSWORD}
  PROD_HOST: ${PROD_HOST}
resources:
  Resources:
    # PostgreSqlRDSInstance: ${file(./resources/PostgreSqlRDSInstance.yml)}
    ServerlessSubnetGroup: ${file(./resources/serverlessSubnetGroup.yml)}
    ServerlessVPCGA: ${file(./resources/serverlessVPCGA.yml)}
    ServerlessVPC: ${file(./resources/serverlessVPC.yml)}
functions:
  graphql:
    handler: src/index.handler
    environment:
      SLS_DEBUG: true
    events:
    - http:
        path: /graphql
        method: post
        cors: true
        integration: lambda-proxy
    - http:
        path: /graphql
        method: get
        cors: true
        integration: lambda-proxy
